<?php

define('DATACITE_DOI_URL', 'mds.datacite.org/doi');

function islandora_doi_menu() {
  $items = array();
  $items['admin/settings/islandora_doi'] = array(
    'title' => t('Islandora DOI'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_doi_admin'),
    'access arguments' => array('administer islandora doi'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function islandora_doi_perm() {
  return array('administer islandora doi');
}

function islandora_doi_admin() {
  $form = array();

  $form['islandora_doi_prefix'] = array(
    '#type' => 'textfield',
    '#title' => t('DOI Prefix'),
    '#default_value' => variable_get('islandora_doi_prefix', ''),
  );

  $form['islandora_doi_username'] = array(
    '#type' => 'textfield',
    '#title' => t('DataCite Username'),
    '#default_value' => variable_get('islandora_doi_username', ''),
  );

  $form['islandora_doi_password'] = array(
    '#type' => 'textfield',
    '#title' => t('DataCite Password'),
    '#default_value' => variable_get('islandora_doi_password', ''),
  );

  $form['islandora_doi_hostname'] = array(
    '#type' => 'textfield',
    '#title' => t('System hostname for minted DOI'),
    '#default_value' => variable_get('islandora_doi_hostname', ''),
    '#description' => t('The URL hostname to be used for DOI record. Ex: http://@host_name', array('@host_name' => $_SERVER['SERVER_NAME'])),
  );

  return system_settings_form($form);
}

function islandora_doi_mint($doi, $url) {
  $prefix = islandora_doi_get_prefix();
  $doi = $prefix . '/' . $doi;

  $fullurl = islandora_doi_get_hostname() . '/' . $url;
  $data = drupal_query_string_encode(array('doi' => $doi, 'url' => $fullurl));

  //$post_request_url = 'https://' . variable_get('islandora_doi_username', '') . ':' . variable_get('islandora_doi_password', '') . '@' . DATACITE_DOI_URL;

  $response = drupal_http_request($post_request_url, array('Content-Type' => 'application/x-www-form-urlencoded', 'charset' => 'UTF-8'), 'POST', $data);

  if ($response->code == '201') {
    return $doi;
  }
  else {
    watchdog('islandora_doi', 'DOI mint failed: ' . $response->data);
    return FALSE;
  }
}

function islandora_doi_register_metadata($doi, $metadataxml) {
  $prefix = islandora_doi_get_prefix();

  if (!empty($prefix)) {
    $doi = $prefix . '/' . $doi;

    //$post_request_url = 'https://' . variable_get('islandora_doi_username', '') . ':' . variable_get('islandora_doi_password', '') . '@' . DATACITE_DOI_METADATA_URL;
    //SFOX custom url for testing only.
    $post_request_url = 'https://' . variable_get('islandora_doi_username', '') . ':' . variable_get('islandora_doi_password', '') . '@' . TEST_DATACITE_DOI_METADATA_URL;
    $response = drupal_http_request($post_request_url, array('Content-Type' => 'application/xml', 'charset' => 'UTF-8'), 'POST', $metadataxml);

    if ($response->code == '201') {
      return $doi;
    }
    else {
      switch ($response->code) {
        case '400' : {
            watchdog('islandora_doi', 'DOI metadata registration failed: Bad Request: ' . $response->data);
            break;
          }
        case '401' : {
            watchdog('islandora_doi', 'DOI metadata registration failed: Unauthorised: ' . $response->data);
            break;
          }
        case '403' : {
            watchdog('islandora_doi', 'DOI metadata registration failed: Forbidden: ' . $response->data);
            break;
          }
        case '500' : {
            watchdog('islandora_doi', 'DOI metadata registration failed: Internal Server Error: ' . $response->data);
            break;
          }
        default: {
            watchdog('islandora_doi', 'DOI metadata registraion failed: Unknown response code: ' . $response->data);
          }
      }
      return FALSE;
    }
  }
  else {
    watchdog('islandora_doi', 'DOI metadata prefix is blank');
    return FALSE;
  }
}

function islandora_doi_form_alter(&$form, &$form_state, $form_id) {
  if (!empty($form['DOI'])) {
    $form['#submit'][] = 'islandora_doi_form_submit';
  }
}

function islandora_doi_form_submit($form, &$form_state) {
  if (!empty($form_state['values']['DOI']) && !empty($form_state['values']['pid'])) {
    global $base_url;

    $hostname = variable_get('islandora_doi_hostname', '');
    if (empty($hostname)) {
      $hostname = 'http://' . $_SERVER['SERVER_NAME'];
    }

    $object_url = $hostname . '/fedora/repository/' . $form_state['values']['pid'];

    $ret = islandora_doi_mint($form_state['values']['DOI'], $object_url);

    if ($ret) {
      drupal_set_message(t('DOI minted: @doi for object: @pid', array('@doi' => $ret, '@pid' => $form_state['values']['pid'])));
      module_invoke_all('islandora_doi_post_mint', $form_state['values']['pid'], $ret);
    }
  }
}

function islandora_doi_get_prefix() {
  return variable_get('islandora_doi_prefix', '');
}

function islandora_doi_get_username() {
  return variable_get('islandora_doi_username', '');
}

function islandora_doi_has_password() {
  $pwd = variable_get('islandora_doi_password', '');
  if (empty($pwd)) {
    return FALSE;
  }
  else {
    return TRUE;
  }
}

function islandora_doi_get_password() {
  return variable_get('islandora_doi_password', '');
}

function islandora_doi_get_hostname() {
  return variable_get('islandora_doi_hostname', '');
}

function islandora_check_doi($doi) {
  $prefix = islandora_doi_get_prefix();
  $doi = $prefix . '/' . $doi;

  //$get_request_url = 'https://' . variable_get('islandora_doi_username', '') . ':' . variable_get('islandora_doi_password', '') . '@' . DATACITE_DOI_URL;
  //SFOX custom url for testing only.
  $get_request_url = 'https://' . variable_get('islandora_doi_username', '') . ':' . variable_get('islandora_doi_password', '') . '@' . TEST_DATACITE_DOI_URL . '/' . $doi;

  $response = drupal_http_request($get_request_url, array('Content-Type' => 'application/x-www-form-urlencoded', 'charset' => 'UTF-8'), 'GET');

  if ($response->code == '200') {
    return $doi;
  }
  else {
    watchdog('islandora_doi', 'DOI check failed: ' . $response->data);
    return FALSE;
  }
}
